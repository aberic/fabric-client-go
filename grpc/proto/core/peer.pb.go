// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/core/peer.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqPeerInstalled struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain string `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	// 组织名称，如org0
	OrgName string `protobuf:"bytes,3,opt,name=orgName,proto3" json:"orgName,omitempty"`
	// 组织用户名称，如Admin
	OrgUser              string   `protobuf:"bytes,4,opt,name=orgUser,proto3" json:"orgUser,omitempty"`
	PeerName             string   `protobuf:"bytes,5,opt,name=peerName,proto3" json:"peerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqPeerInstalled) Reset()         { *m = ReqPeerInstalled{} }
func (m *ReqPeerInstalled) String() string { return proto.CompactTextString(m) }
func (*ReqPeerInstalled) ProtoMessage()    {}
func (*ReqPeerInstalled) Descriptor() ([]byte, []int) {
	return fileDescriptor_1308d01a2f48e1e9, []int{0}
}

func (m *ReqPeerInstalled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqPeerInstalled.Unmarshal(m, b)
}
func (m *ReqPeerInstalled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqPeerInstalled.Marshal(b, m, deterministic)
}
func (m *ReqPeerInstalled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqPeerInstalled.Merge(m, src)
}
func (m *ReqPeerInstalled) XXX_Size() int {
	return xxx_messageInfo_ReqPeerInstalled.Size(m)
}
func (m *ReqPeerInstalled) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqPeerInstalled.DiscardUnknown(m)
}

var xxx_messageInfo_ReqPeerInstalled proto.InternalMessageInfo

func (m *ReqPeerInstalled) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqPeerInstalled) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqPeerInstalled) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *ReqPeerInstalled) GetOrgUser() string {
	if m != nil {
		return m.OrgUser
	}
	return ""
}

func (m *ReqPeerInstalled) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

type RespPeerInstalled struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg               string           `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	CcInfos              []*ChainCodeInfo `protobuf:"bytes,3,rep,name=ccInfos,proto3" json:"ccInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RespPeerInstalled) Reset()         { *m = RespPeerInstalled{} }
func (m *RespPeerInstalled) String() string { return proto.CompactTextString(m) }
func (*RespPeerInstalled) ProtoMessage()    {}
func (*RespPeerInstalled) Descriptor() ([]byte, []int) {
	return fileDescriptor_1308d01a2f48e1e9, []int{1}
}

func (m *RespPeerInstalled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespPeerInstalled.Unmarshal(m, b)
}
func (m *RespPeerInstalled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespPeerInstalled.Marshal(b, m, deterministic)
}
func (m *RespPeerInstalled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespPeerInstalled.Merge(m, src)
}
func (m *RespPeerInstalled) XXX_Size() int {
	return xxx_messageInfo_RespPeerInstalled.Size(m)
}
func (m *RespPeerInstalled) XXX_DiscardUnknown() {
	xxx_messageInfo_RespPeerInstalled.DiscardUnknown(m)
}

var xxx_messageInfo_RespPeerInstalled proto.InternalMessageInfo

func (m *RespPeerInstalled) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespPeerInstalled) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespPeerInstalled) GetCcInfos() []*ChainCodeInfo {
	if m != nil {
		return m.CcInfos
	}
	return nil
}

type ReqPeerInstantiated struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain string `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	// 组织名称，如org0
	OrgName string `protobuf:"bytes,3,opt,name=orgName,proto3" json:"orgName,omitempty"`
	// 组织用户名称，如Admin
	OrgUser              string   `protobuf:"bytes,4,opt,name=orgUser,proto3" json:"orgUser,omitempty"`
	PeerName             string   `protobuf:"bytes,5,opt,name=peerName,proto3" json:"peerName,omitempty"`
	ChannelID            string   `protobuf:"bytes,6,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqPeerInstantiated) Reset()         { *m = ReqPeerInstantiated{} }
func (m *ReqPeerInstantiated) String() string { return proto.CompactTextString(m) }
func (*ReqPeerInstantiated) ProtoMessage()    {}
func (*ReqPeerInstantiated) Descriptor() ([]byte, []int) {
	return fileDescriptor_1308d01a2f48e1e9, []int{2}
}

func (m *ReqPeerInstantiated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqPeerInstantiated.Unmarshal(m, b)
}
func (m *ReqPeerInstantiated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqPeerInstantiated.Marshal(b, m, deterministic)
}
func (m *ReqPeerInstantiated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqPeerInstantiated.Merge(m, src)
}
func (m *ReqPeerInstantiated) XXX_Size() int {
	return xxx_messageInfo_ReqPeerInstantiated.Size(m)
}
func (m *ReqPeerInstantiated) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqPeerInstantiated.DiscardUnknown(m)
}

var xxx_messageInfo_ReqPeerInstantiated proto.InternalMessageInfo

func (m *ReqPeerInstantiated) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqPeerInstantiated) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqPeerInstantiated) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *ReqPeerInstantiated) GetOrgUser() string {
	if m != nil {
		return m.OrgUser
	}
	return ""
}

func (m *ReqPeerInstantiated) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *ReqPeerInstantiated) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type RespPeerInstantiated struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg               string           `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	CcInfos              []*ChainCodeInfo `protobuf:"bytes,3,rep,name=ccInfos,proto3" json:"ccInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RespPeerInstantiated) Reset()         { *m = RespPeerInstantiated{} }
func (m *RespPeerInstantiated) String() string { return proto.CompactTextString(m) }
func (*RespPeerInstantiated) ProtoMessage()    {}
func (*RespPeerInstantiated) Descriptor() ([]byte, []int) {
	return fileDescriptor_1308d01a2f48e1e9, []int{3}
}

func (m *RespPeerInstantiated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespPeerInstantiated.Unmarshal(m, b)
}
func (m *RespPeerInstantiated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespPeerInstantiated.Marshal(b, m, deterministic)
}
func (m *RespPeerInstantiated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespPeerInstantiated.Merge(m, src)
}
func (m *RespPeerInstantiated) XXX_Size() int {
	return xxx_messageInfo_RespPeerInstantiated.Size(m)
}
func (m *RespPeerInstantiated) XXX_DiscardUnknown() {
	xxx_messageInfo_RespPeerInstantiated.DiscardUnknown(m)
}

var xxx_messageInfo_RespPeerInstantiated proto.InternalMessageInfo

func (m *RespPeerInstantiated) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespPeerInstantiated) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespPeerInstantiated) GetCcInfos() []*ChainCodeInfo {
	if m != nil {
		return m.CcInfos
	}
	return nil
}

type ReqPeerCollectionsConfig struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain string `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	// 组织名称，如org0
	OrgName string `protobuf:"bytes,3,opt,name=orgName,proto3" json:"orgName,omitempty"`
	// 组织用户名称，如Admin
	OrgUser   string `protobuf:"bytes,4,opt,name=orgUser,proto3" json:"orgUser,omitempty"`
	PeerName  string `protobuf:"bytes,5,opt,name=peerName,proto3" json:"peerName,omitempty"`
	ChannelID string `protobuf:"bytes,6,opt,name=channelID,proto3" json:"channelID,omitempty"`
	// 链码名称
	CcID                 string   `protobuf:"bytes,7,opt,name=ccID,proto3" json:"ccID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqPeerCollectionsConfig) Reset()         { *m = ReqPeerCollectionsConfig{} }
func (m *ReqPeerCollectionsConfig) String() string { return proto.CompactTextString(m) }
func (*ReqPeerCollectionsConfig) ProtoMessage()    {}
func (*ReqPeerCollectionsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1308d01a2f48e1e9, []int{4}
}

func (m *ReqPeerCollectionsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqPeerCollectionsConfig.Unmarshal(m, b)
}
func (m *ReqPeerCollectionsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqPeerCollectionsConfig.Marshal(b, m, deterministic)
}
func (m *ReqPeerCollectionsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqPeerCollectionsConfig.Merge(m, src)
}
func (m *ReqPeerCollectionsConfig) XXX_Size() int {
	return xxx_messageInfo_ReqPeerCollectionsConfig.Size(m)
}
func (m *ReqPeerCollectionsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqPeerCollectionsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReqPeerCollectionsConfig proto.InternalMessageInfo

func (m *ReqPeerCollectionsConfig) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqPeerCollectionsConfig) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqPeerCollectionsConfig) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *ReqPeerCollectionsConfig) GetOrgUser() string {
	if m != nil {
		return m.OrgUser
	}
	return ""
}

func (m *ReqPeerCollectionsConfig) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *ReqPeerCollectionsConfig) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *ReqPeerCollectionsConfig) GetCcID() string {
	if m != nil {
		return m.CcID
	}
	return ""
}

type RespPeerCollectionsConfig struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespPeerCollectionsConfig) Reset()         { *m = RespPeerCollectionsConfig{} }
func (m *RespPeerCollectionsConfig) String() string { return proto.CompactTextString(m) }
func (*RespPeerCollectionsConfig) ProtoMessage()    {}
func (*RespPeerCollectionsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1308d01a2f48e1e9, []int{5}
}

func (m *RespPeerCollectionsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespPeerCollectionsConfig.Unmarshal(m, b)
}
func (m *RespPeerCollectionsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespPeerCollectionsConfig.Marshal(b, m, deterministic)
}
func (m *RespPeerCollectionsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespPeerCollectionsConfig.Merge(m, src)
}
func (m *RespPeerCollectionsConfig) XXX_Size() int {
	return xxx_messageInfo_RespPeerCollectionsConfig.Size(m)
}
func (m *RespPeerCollectionsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RespPeerCollectionsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RespPeerCollectionsConfig proto.InternalMessageInfo

func (m *RespPeerCollectionsConfig) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespPeerCollectionsConfig) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*ReqPeerInstalled)(nil), "core.ReqPeerInstalled")
	proto.RegisterType((*RespPeerInstalled)(nil), "core.RespPeerInstalled")
	proto.RegisterType((*ReqPeerInstantiated)(nil), "core.ReqPeerInstantiated")
	proto.RegisterType((*RespPeerInstantiated)(nil), "core.RespPeerInstantiated")
	proto.RegisterType((*ReqPeerCollectionsConfig)(nil), "core.ReqPeerCollectionsConfig")
	proto.RegisterType((*RespPeerCollectionsConfig)(nil), "core.RespPeerCollectionsConfig")
}

func init() { proto.RegisterFile("grpc/proto/core/peer.proto", fileDescriptor_1308d01a2f48e1e9) }

var fileDescriptor_1308d01a2f48e1e9 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0xcf, 0x4e, 0xe3, 0x30,
	0x10, 0xc6, 0x95, 0x6d, 0xb6, 0xdd, 0xce, 0xae, 0xba, 0xe0, 0x22, 0x64, 0x02, 0x82, 0x2a, 0x17,
	0x7a, 0x69, 0x2a, 0x95, 0x37, 0x68, 0x7b, 0x09, 0x12, 0xa8, 0x0a, 0xe2, 0xc2, 0xcd, 0x75, 0xa7,
	0xa9, 0xa5, 0xd4, 0x0e, 0x4e, 0x7a, 0x41, 0xe2, 0x6d, 0x78, 0x15, 0x5e, 0x83, 0x67, 0x41, 0x76,
	0xfe, 0x40, 0xcb, 0x8d, 0x03, 0x82, 0x5b, 0xe6, 0xfb, 0xbe, 0x89, 0x67, 0x7e, 0xd2, 0x80, 0x17,
	0xeb, 0x94, 0x0f, 0x53, 0xad, 0x72, 0x35, 0xe4, 0x4a, 0xe3, 0x30, 0x45, 0xd4, 0x81, 0xad, 0x89,
	0x6b, 0x04, 0xef, 0x6c, 0x37, 0xc1, 0x57, 0x4c, 0x48, 0xae, 0x16, 0x58, 0xc4, 0xbc, 0xe3, 0xdd,
	0x00, 0xca, 0xcd, 0x3a, 0x2b, 0x4c, 0xff, 0xc9, 0x81, 0xbd, 0x08, 0xef, 0x67, 0x88, 0x3a, 0x94,
	0x59, 0xce, 0x92, 0x04, 0x17, 0xc4, 0x87, 0x7f, 0x09, 0xb2, 0x78, 0x83, 0x53, 0xb5, 0x66, 0x42,
	0x52, 0xa7, 0xe7, 0xf4, 0xdb, 0xd1, 0x96, 0x46, 0x4e, 0xa0, 0xad, 0x74, 0x5c, 0x06, 0x7e, 0xd9,
	0xc0, 0x9b, 0x40, 0x28, 0xb4, 0x94, 0x8e, 0xaf, 0xd9, 0x1a, 0x69, 0xc3, 0x7a, 0x55, 0x59, 0x3a,
	0xb7, 0x19, 0x6a, 0xea, 0xd6, 0x8e, 0x29, 0x89, 0x07, 0x7f, 0xcc, 0x72, 0xb6, 0xe9, 0xb7, 0xb5,
	0xea, 0xda, 0x7f, 0x80, 0xfd, 0x08, 0xb3, 0x74, 0x7b, 0xcc, 0x53, 0x70, 0xcd, 0x9a, 0x76, 0xbc,
	0xce, 0x08, 0x02, 0xb3, 0x5c, 0x30, 0x51, 0x0b, 0x8c, 0xac, 0x4e, 0x0e, 0xa1, 0x89, 0x5a, 0x5f,
	0x65, 0x71, 0x39, 0x5f, 0x59, 0x91, 0x01, 0xb4, 0x38, 0x0f, 0xe5, 0x52, 0x65, 0xb4, 0xd1, 0x6b,
	0xf4, 0xff, 0x8e, 0xba, 0x65, 0xab, 0x01, 0x67, 0xfa, 0x8d, 0x17, 0x55, 0x19, 0xff, 0xd9, 0x81,
	0xee, 0x7b, 0x44, 0x32, 0x17, 0x2c, 0xff, 0x8e, 0x94, 0xcc, 0x6b, 0x7c, 0xc5, 0xa4, 0xc4, 0x24,
	0x9c, 0xd2, 0x66, 0xf1, 0x5a, 0x2d, 0xf8, 0x8f, 0x70, 0xb0, 0xc5, 0xb0, 0xda, 0xe3, 0x8b, 0x30,
	0xbe, 0x38, 0x40, 0x4b, 0x8c, 0x13, 0x95, 0x24, 0xc8, 0x73, 0xa1, 0x64, 0x36, 0x51, 0x72, 0x29,
	0xe2, 0x9f, 0xc6, 0x92, 0x10, 0x70, 0x39, 0x0f, 0xa7, 0xb4, 0x65, 0x0d, 0xfb, 0xed, 0xdf, 0xc0,
	0x51, 0xc5, 0xf7, 0xe3, 0x82, 0x9f, 0x84, 0x3c, 0xbe, 0x84, 0x73, 0x2e, 0x03, 0x36, 0x47, 0x2d,
	0x78, 0xb0, 0x64, 0x73, 0x2d, 0xf8, 0x80, 0x27, 0x02, 0x65, 0x1e, 0x98, 0xb3, 0x2e, 0xae, 0xd8,
	0xfe, 0x6d, 0xdc, 0xa9, 0xc1, 0xcf, 0x8c, 0x78, 0xf7, 0x7f, 0xe7, 0xee, 0xe7, 0x4d, 0xfb, 0x7d,
	0xf1, 0x1a, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x03, 0x2d, 0xb5, 0x54, 0x04, 0x00, 0x00,
}
