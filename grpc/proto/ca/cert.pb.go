// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/ca/cert.proto

package ca

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 密钥生成配置请求结构
type ReqKeyConfig struct {
	// 密钥生成类型：ECDSA=0；RSA=1
	CryptoType CryptoType `protobuf:"varint,1,opt,name=cryptoType,proto3,enum=ca.CryptoType" json:"cryptoType,omitempty"`
	// 密钥长度
	//
	// Types that are valid to be assigned to Algorithm:
	//	*ReqKeyConfig_EccAlgorithm
	//	*ReqKeyConfig_RsaAlgorithm
	Algorithm            isReqKeyConfig_Algorithm `protobuf_oneof:"Algorithm"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ReqKeyConfig) Reset()         { *m = ReqKeyConfig{} }
func (m *ReqKeyConfig) String() string { return proto.CompactTextString(m) }
func (*ReqKeyConfig) ProtoMessage()    {}
func (*ReqKeyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{0}
}

func (m *ReqKeyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqKeyConfig.Unmarshal(m, b)
}
func (m *ReqKeyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqKeyConfig.Marshal(b, m, deterministic)
}
func (m *ReqKeyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqKeyConfig.Merge(m, src)
}
func (m *ReqKeyConfig) XXX_Size() int {
	return xxx_messageInfo_ReqKeyConfig.Size(m)
}
func (m *ReqKeyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqKeyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReqKeyConfig proto.InternalMessageInfo

func (m *ReqKeyConfig) GetCryptoType() CryptoType {
	if m != nil {
		return m.CryptoType
	}
	return CryptoType_ECDSA
}

type isReqKeyConfig_Algorithm interface {
	isReqKeyConfig_Algorithm()
}

type ReqKeyConfig_EccAlgorithm struct {
	EccAlgorithm EccAlgorithm `protobuf:"varint,2,opt,name=eccAlgorithm,proto3,enum=ca.EccAlgorithm,oneof"`
}

type ReqKeyConfig_RsaAlgorithm struct {
	RsaAlgorithm RsaAlgorithm `protobuf:"varint,3,opt,name=rsaAlgorithm,proto3,enum=ca.RsaAlgorithm,oneof"`
}

func (*ReqKeyConfig_EccAlgorithm) isReqKeyConfig_Algorithm() {}

func (*ReqKeyConfig_RsaAlgorithm) isReqKeyConfig_Algorithm() {}

func (m *ReqKeyConfig) GetAlgorithm() isReqKeyConfig_Algorithm {
	if m != nil {
		return m.Algorithm
	}
	return nil
}

func (m *ReqKeyConfig) GetEccAlgorithm() EccAlgorithm {
	if x, ok := m.GetAlgorithm().(*ReqKeyConfig_EccAlgorithm); ok {
		return x.EccAlgorithm
	}
	return EccAlgorithm_p256
}

func (m *ReqKeyConfig) GetRsaAlgorithm() RsaAlgorithm {
	if x, ok := m.GetAlgorithm().(*ReqKeyConfig_RsaAlgorithm); ok {
		return x.RsaAlgorithm
	}
	return RsaAlgorithm_r2048
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReqKeyConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReqKeyConfig_OneofMarshaler, _ReqKeyConfig_OneofUnmarshaler, _ReqKeyConfig_OneofSizer, []interface{}{
		(*ReqKeyConfig_EccAlgorithm)(nil),
		(*ReqKeyConfig_RsaAlgorithm)(nil),
	}
}

func _ReqKeyConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReqKeyConfig)
	// Algorithm
	switch x := m.Algorithm.(type) {
	case *ReqKeyConfig_EccAlgorithm:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.EccAlgorithm))
	case *ReqKeyConfig_RsaAlgorithm:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.RsaAlgorithm))
	case nil:
	default:
		return fmt.Errorf("ReqKeyConfig.Algorithm has unexpected type %T", x)
	}
	return nil
}

func _ReqKeyConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReqKeyConfig)
	switch tag {
	case 2: // Algorithm.eccAlgorithm
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Algorithm = &ReqKeyConfig_EccAlgorithm{EccAlgorithm(x)}
		return true, err
	case 3: // Algorithm.rsaAlgorithm
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Algorithm = &ReqKeyConfig_RsaAlgorithm{RsaAlgorithm(x)}
		return true, err
	default:
		return false, nil
	}
}

func _ReqKeyConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReqKeyConfig)
	// Algorithm
	switch x := m.Algorithm.(type) {
	case *ReqKeyConfig_EccAlgorithm:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.EccAlgorithm))
	case *ReqKeyConfig_RsaAlgorithm:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.RsaAlgorithm))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 密钥生成配置返回结构
type RespKeyConfig struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=ca.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	// 私钥数据信息，直接转string得到pem格式化后内容
	PriKeyBytes []byte `protobuf:"bytes,3,opt,name=priKeyBytes,proto3" json:"priKeyBytes,omitempty"`
	// 公钥数据信息，直接转string得到pem格式化后内容
	PubKeyBytes          []byte   `protobuf:"bytes,4,opt,name=pubKeyBytes,proto3" json:"pubKeyBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespKeyConfig) Reset()         { *m = RespKeyConfig{} }
func (m *RespKeyConfig) String() string { return proto.CompactTextString(m) }
func (*RespKeyConfig) ProtoMessage()    {}
func (*RespKeyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{1}
}

func (m *RespKeyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespKeyConfig.Unmarshal(m, b)
}
func (m *RespKeyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespKeyConfig.Marshal(b, m, deterministic)
}
func (m *RespKeyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespKeyConfig.Merge(m, src)
}
func (m *RespKeyConfig) XXX_Size() int {
	return xxx_messageInfo_RespKeyConfig.Size(m)
}
func (m *RespKeyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RespKeyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RespKeyConfig proto.InternalMessageInfo

func (m *RespKeyConfig) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespKeyConfig) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespKeyConfig) GetPriKeyBytes() []byte {
	if m != nil {
		return m.PriKeyBytes
	}
	return nil
}

func (m *RespKeyConfig) GetPubKeyBytes() []byte {
	if m != nil {
		return m.PubKeyBytes
	}
	return nil
}

// 生成联盟根证书请求
type ReqCreateLeague struct {
	// 联盟根域名
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// 联盟ca私钥，pem格式化
	PriKeyBytes []byte `protobuf:"bytes,2,opt,name=priKeyBytes,proto3" json:"priKeyBytes,omitempty"`
	// 联盟tlsCa私钥，pem格式化
	PriTlsKeyBytes []byte `protobuf:"bytes,3,opt,name=priTlsKeyBytes,proto3" json:"priTlsKeyBytes,omitempty"`
	// 证书请求申请内容
	Csr *CSR `protobuf:"bytes,4,opt,name=csr,proto3" json:"csr,omitempty"`
	// 签名算法
	SignAlgorithm        SignAlgorithm `protobuf:"varint,5,opt,name=signAlgorithm,proto3,enum=ca.SignAlgorithm" json:"signAlgorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReqCreateLeague) Reset()         { *m = ReqCreateLeague{} }
func (m *ReqCreateLeague) String() string { return proto.CompactTextString(m) }
func (*ReqCreateLeague) ProtoMessage()    {}
func (*ReqCreateLeague) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{2}
}

func (m *ReqCreateLeague) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCreateLeague.Unmarshal(m, b)
}
func (m *ReqCreateLeague) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCreateLeague.Marshal(b, m, deterministic)
}
func (m *ReqCreateLeague) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCreateLeague.Merge(m, src)
}
func (m *ReqCreateLeague) XXX_Size() int {
	return xxx_messageInfo_ReqCreateLeague.Size(m)
}
func (m *ReqCreateLeague) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCreateLeague.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCreateLeague proto.InternalMessageInfo

func (m *ReqCreateLeague) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ReqCreateLeague) GetPriKeyBytes() []byte {
	if m != nil {
		return m.PriKeyBytes
	}
	return nil
}

func (m *ReqCreateLeague) GetPriTlsKeyBytes() []byte {
	if m != nil {
		return m.PriTlsKeyBytes
	}
	return nil
}

func (m *ReqCreateLeague) GetCsr() *CSR {
	if m != nil {
		return m.Csr
	}
	return nil
}

func (m *ReqCreateLeague) GetSignAlgorithm() SignAlgorithm {
	if m != nil {
		return m.SignAlgorithm
	}
	return SignAlgorithm_SHA256WithRSA
}

// 返回联盟根证书请求
type RespCreateLeague struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=ca.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	// 根证书信息，直接转string得到pem格式化后内容
	CaCertBytes []byte `protobuf:"bytes,3,opt,name=caCertBytes,proto3" json:"caCertBytes,omitempty"`
	// tls根证书信息，直接转string得到pem格式化后内容
	TlsCaCertBytes       []byte   `protobuf:"bytes,4,opt,name=tlsCaCertBytes,proto3" json:"tlsCaCertBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespCreateLeague) Reset()         { *m = RespCreateLeague{} }
func (m *RespCreateLeague) String() string { return proto.CompactTextString(m) }
func (*RespCreateLeague) ProtoMessage()    {}
func (*RespCreateLeague) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{3}
}

func (m *RespCreateLeague) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespCreateLeague.Unmarshal(m, b)
}
func (m *RespCreateLeague) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespCreateLeague.Marshal(b, m, deterministic)
}
func (m *RespCreateLeague) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespCreateLeague.Merge(m, src)
}
func (m *RespCreateLeague) XXX_Size() int {
	return xxx_messageInfo_RespCreateLeague.Size(m)
}
func (m *RespCreateLeague) XXX_DiscardUnknown() {
	xxx_messageInfo_RespCreateLeague.DiscardUnknown(m)
}

var xxx_messageInfo_RespCreateLeague proto.InternalMessageInfo

func (m *RespCreateLeague) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespCreateLeague) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespCreateLeague) GetCaCertBytes() []byte {
	if m != nil {
		return m.CaCertBytes
	}
	return nil
}

func (m *RespCreateLeague) GetTlsCaCertBytes() []byte {
	if m != nil {
		return m.TlsCaCertBytes
	}
	return nil
}

// 生成CA请求证书文件请求
type ReqCreateCsr struct {
	// 联盟根域名
	LeagueDomain string `protobuf:"bytes,2,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织名称
	OrgName string `protobuf:"bytes,3,opt,name=orgName,proto3" json:"orgName,omitempty"`
	// 组织根域名
	OrgDomain string `protobuf:"bytes,4,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	// 私钥，pem格式化
	PriKeyBytes []byte `protobuf:"bytes,5,opt,name=priKeyBytes,proto3" json:"priKeyBytes,omitempty"`
	// 证书请求申请内容
	Name                 *CSR          `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	SignAlgorithm        SignAlgorithm `protobuf:"varint,7,opt,name=signAlgorithm,proto3,enum=ca.SignAlgorithm" json:"signAlgorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReqCreateCsr) Reset()         { *m = ReqCreateCsr{} }
func (m *ReqCreateCsr) String() string { return proto.CompactTextString(m) }
func (*ReqCreateCsr) ProtoMessage()    {}
func (*ReqCreateCsr) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{4}
}

func (m *ReqCreateCsr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCreateCsr.Unmarshal(m, b)
}
func (m *ReqCreateCsr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCreateCsr.Marshal(b, m, deterministic)
}
func (m *ReqCreateCsr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCreateCsr.Merge(m, src)
}
func (m *ReqCreateCsr) XXX_Size() int {
	return xxx_messageInfo_ReqCreateCsr.Size(m)
}
func (m *ReqCreateCsr) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCreateCsr.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCreateCsr proto.InternalMessageInfo

func (m *ReqCreateCsr) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqCreateCsr) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *ReqCreateCsr) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqCreateCsr) GetPriKeyBytes() []byte {
	if m != nil {
		return m.PriKeyBytes
	}
	return nil
}

func (m *ReqCreateCsr) GetName() *CSR {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ReqCreateCsr) GetSignAlgorithm() SignAlgorithm {
	if m != nil {
		return m.SignAlgorithm
	}
	return SignAlgorithm_SHA256WithRSA
}

// 生成CA请求证书文件返回
type RespCreateCsr struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=ca.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	// CA请求证书文件，直接转string得到pem格式化后内容
	CsrBytes             []byte   `protobuf:"bytes,3,opt,name=csrBytes,proto3" json:"csrBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespCreateCsr) Reset()         { *m = RespCreateCsr{} }
func (m *RespCreateCsr) String() string { return proto.CompactTextString(m) }
func (*RespCreateCsr) ProtoMessage()    {}
func (*RespCreateCsr) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{5}
}

func (m *RespCreateCsr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespCreateCsr.Unmarshal(m, b)
}
func (m *RespCreateCsr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespCreateCsr.Marshal(b, m, deterministic)
}
func (m *RespCreateCsr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespCreateCsr.Merge(m, src)
}
func (m *RespCreateCsr) XXX_Size() int {
	return xxx_messageInfo_RespCreateCsr.Size(m)
}
func (m *RespCreateCsr) XXX_DiscardUnknown() {
	xxx_messageInfo_RespCreateCsr.DiscardUnknown(m)
}

var xxx_messageInfo_RespCreateCsr proto.InternalMessageInfo

func (m *RespCreateCsr) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespCreateCsr) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespCreateCsr) GetCsrBytes() []byte {
	if m != nil {
		return m.CsrBytes
	}
	return nil
}

type ReqCreateOrgChild struct {
	// 组织类型
	OrgType OrgType `protobuf:"varint,1,opt,name=orgType,proto3,enum=ca.OrgType" json:"orgType,omitempty"`
	// 组织子节点/用户
	OrgChild             *OrgChild `protobuf:"bytes,2,opt,name=orgChild,proto3" json:"orgChild,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReqCreateOrgChild) Reset()         { *m = ReqCreateOrgChild{} }
func (m *ReqCreateOrgChild) String() string { return proto.CompactTextString(m) }
func (*ReqCreateOrgChild) ProtoMessage()    {}
func (*ReqCreateOrgChild) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{6}
}

func (m *ReqCreateOrgChild) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCreateOrgChild.Unmarshal(m, b)
}
func (m *ReqCreateOrgChild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCreateOrgChild.Marshal(b, m, deterministic)
}
func (m *ReqCreateOrgChild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCreateOrgChild.Merge(m, src)
}
func (m *ReqCreateOrgChild) XXX_Size() int {
	return xxx_messageInfo_ReqCreateOrgChild.Size(m)
}
func (m *ReqCreateOrgChild) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCreateOrgChild.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCreateOrgChild proto.InternalMessageInfo

func (m *ReqCreateOrgChild) GetOrgType() OrgType {
	if m != nil {
		return m.OrgType
	}
	return OrgType_Order
}

func (m *ReqCreateOrgChild) GetOrgChild() *OrgChild {
	if m != nil {
		return m.OrgChild
	}
	return nil
}

type RespCreateOrgChild struct {
	Code   Code   `protobuf:"varint,1,opt,name=code,proto3,enum=ca.Code" json:"code,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	// 被签发证书，直接转string得到pem格式化后内容
	Cert []byte `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
	// 被签发tls证书，直接转string得到pem格式化后内容
	TlsCert              []byte   `protobuf:"bytes,4,opt,name=tlsCert,proto3" json:"tlsCert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespCreateOrgChild) Reset()         { *m = RespCreateOrgChild{} }
func (m *RespCreateOrgChild) String() string { return proto.CompactTextString(m) }
func (*RespCreateOrgChild) ProtoMessage()    {}
func (*RespCreateOrgChild) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{7}
}

func (m *RespCreateOrgChild) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespCreateOrgChild.Unmarshal(m, b)
}
func (m *RespCreateOrgChild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespCreateOrgChild.Marshal(b, m, deterministic)
}
func (m *RespCreateOrgChild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespCreateOrgChild.Merge(m, src)
}
func (m *RespCreateOrgChild) XXX_Size() int {
	return xxx_messageInfo_RespCreateOrgChild.Size(m)
}
func (m *RespCreateOrgChild) XXX_DiscardUnknown() {
	xxx_messageInfo_RespCreateOrgChild.DiscardUnknown(m)
}

var xxx_messageInfo_RespCreateOrgChild proto.InternalMessageInfo

func (m *RespCreateOrgChild) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespCreateOrgChild) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespCreateOrgChild) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *RespCreateOrgChild) GetTlsCert() []byte {
	if m != nil {
		return m.TlsCert
	}
	return nil
}

// 组织子节点/用户
type OrgChild struct {
	// 用户公钥
	PubTlsBytes []byte `protobuf:"bytes,7,opt,name=pubTlsBytes,proto3" json:"pubTlsBytes,omitempty"`
	// 联盟tls私钥
	PriTlsParentBytes []byte `protobuf:"bytes,6,opt,name=priTlsParentBytes,proto3" json:"priTlsParentBytes,omitempty"`
	// 联盟tls根证书
	RootTlsCaCertBytes []byte `protobuf:"bytes,9,opt,name=rootTlsCaCertBytes,proto3" json:"rootTlsCaCertBytes,omitempty"`
	// 传输签名算法
	SignAlgorithm SignAlgorithm `protobuf:"varint,10,opt,name=signAlgorithm,proto3,enum=ca.SignAlgorithm" json:"signAlgorithm,omitempty"`
	// fabric ca 登记信息1
	EnrollInfo           *EnrollInfo `protobuf:"bytes,11,opt,name=enrollInfo,proto3" json:"enrollInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OrgChild) Reset()         { *m = OrgChild{} }
func (m *OrgChild) String() string { return proto.CompactTextString(m) }
func (*OrgChild) ProtoMessage()    {}
func (*OrgChild) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{8}
}

func (m *OrgChild) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrgChild.Unmarshal(m, b)
}
func (m *OrgChild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrgChild.Marshal(b, m, deterministic)
}
func (m *OrgChild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrgChild.Merge(m, src)
}
func (m *OrgChild) XXX_Size() int {
	return xxx_messageInfo_OrgChild.Size(m)
}
func (m *OrgChild) XXX_DiscardUnknown() {
	xxx_messageInfo_OrgChild.DiscardUnknown(m)
}

var xxx_messageInfo_OrgChild proto.InternalMessageInfo

func (m *OrgChild) GetPubTlsBytes() []byte {
	if m != nil {
		return m.PubTlsBytes
	}
	return nil
}

func (m *OrgChild) GetPriTlsParentBytes() []byte {
	if m != nil {
		return m.PriTlsParentBytes
	}
	return nil
}

func (m *OrgChild) GetRootTlsCaCertBytes() []byte {
	if m != nil {
		return m.RootTlsCaCertBytes
	}
	return nil
}

func (m *OrgChild) GetSignAlgorithm() SignAlgorithm {
	if m != nil {
		return m.SignAlgorithm
	}
	return SignAlgorithm_SHA256WithRSA
}

func (m *OrgChild) GetEnrollInfo() *EnrollInfo {
	if m != nil {
		return m.EnrollInfo
	}
	return nil
}

// fabric ca 登记信息
type EnrollInfo struct {
	// csr pem 请求内容
	CsrPemBytes []byte `protobuf:"bytes,1,opt,name=csrPemBytes,proto3" json:"csrPemBytes,omitempty"`
	// fabric ca url
	FabricCaServerURL string `protobuf:"bytes,2,opt,name=fabricCaServerURL,proto3" json:"fabricCaServerURL,omitempty"`
	// 在多少天前无效
	NotBefore int64 `protobuf:"varint,3,opt,name=notBefore,proto3" json:"notBefore,omitempty"`
	// 在多少天后无效
	NotAfter int64 `protobuf:"varint,4,opt,name=notAfter,proto3" json:"notAfter,omitempty"`
	// fabric ca 登记请求
	EnrollRequest        *EnrollRequest `protobuf:"bytes,5,opt,name=enrollRequest,proto3" json:"enrollRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EnrollInfo) Reset()         { *m = EnrollInfo{} }
func (m *EnrollInfo) String() string { return proto.CompactTextString(m) }
func (*EnrollInfo) ProtoMessage()    {}
func (*EnrollInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{9}
}

func (m *EnrollInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnrollInfo.Unmarshal(m, b)
}
func (m *EnrollInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnrollInfo.Marshal(b, m, deterministic)
}
func (m *EnrollInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnrollInfo.Merge(m, src)
}
func (m *EnrollInfo) XXX_Size() int {
	return xxx_messageInfo_EnrollInfo.Size(m)
}
func (m *EnrollInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EnrollInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EnrollInfo proto.InternalMessageInfo

func (m *EnrollInfo) GetCsrPemBytes() []byte {
	if m != nil {
		return m.CsrPemBytes
	}
	return nil
}

func (m *EnrollInfo) GetFabricCaServerURL() string {
	if m != nil {
		return m.FabricCaServerURL
	}
	return ""
}

func (m *EnrollInfo) GetNotBefore() int64 {
	if m != nil {
		return m.NotBefore
	}
	return 0
}

func (m *EnrollInfo) GetNotAfter() int64 {
	if m != nil {
		return m.NotAfter
	}
	return 0
}

func (m *EnrollInfo) GetEnrollRequest() *EnrollRequest {
	if m != nil {
		return m.EnrollRequest
	}
	return nil
}

// fabric ca 等级请求
type EnrollRequest struct {
	// fabric ca 登记ID
	EnrollID string `protobuf:"bytes,1,opt,name=enrollID,proto3" json:"enrollID,omitempty"`
	// fabric ca 登记密码
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// 证书请求申请内容
	Name *CSR `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// tls，非必须
	Profile string `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
	// 标签，非必须
	Label string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	// ca name，非必须
	CaName string `protobuf:"bytes,6,opt,name=caName,proto3" json:"caName,omitempty"`
	// example.com，非必须
	Hosts []string `protobuf:"bytes,7,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// fabric ca 登记属性，非必须
	Attrs                []*EnrollAttribute `protobuf:"bytes,8,rep,name=attrs,proto3" json:"attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EnrollRequest) Reset()         { *m = EnrollRequest{} }
func (m *EnrollRequest) String() string { return proto.CompactTextString(m) }
func (*EnrollRequest) ProtoMessage()    {}
func (*EnrollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{10}
}

func (m *EnrollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnrollRequest.Unmarshal(m, b)
}
func (m *EnrollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnrollRequest.Marshal(b, m, deterministic)
}
func (m *EnrollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnrollRequest.Merge(m, src)
}
func (m *EnrollRequest) XXX_Size() int {
	return xxx_messageInfo_EnrollRequest.Size(m)
}
func (m *EnrollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnrollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnrollRequest proto.InternalMessageInfo

func (m *EnrollRequest) GetEnrollID() string {
	if m != nil {
		return m.EnrollID
	}
	return ""
}

func (m *EnrollRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *EnrollRequest) GetName() *CSR {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *EnrollRequest) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *EnrollRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *EnrollRequest) GetCaName() string {
	if m != nil {
		return m.CaName
	}
	return ""
}

func (m *EnrollRequest) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *EnrollRequest) GetAttrs() []*EnrollAttribute {
	if m != nil {
		return m.Attrs
	}
	return nil
}

// fabric ca 登记属性
type EnrollAttribute struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Optional             bool     `protobuf:"varint,2,opt,name=optional,proto3" json:"optional,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnrollAttribute) Reset()         { *m = EnrollAttribute{} }
func (m *EnrollAttribute) String() string { return proto.CompactTextString(m) }
func (*EnrollAttribute) ProtoMessage()    {}
func (*EnrollAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{11}
}

func (m *EnrollAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnrollAttribute.Unmarshal(m, b)
}
func (m *EnrollAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnrollAttribute.Marshal(b, m, deterministic)
}
func (m *EnrollAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnrollAttribute.Merge(m, src)
}
func (m *EnrollAttribute) XXX_Size() int {
	return xxx_messageInfo_EnrollAttribute.Size(m)
}
func (m *EnrollAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_EnrollAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_EnrollAttribute proto.InternalMessageInfo

func (m *EnrollAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnrollAttribute) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

// 证书请求申请内容
type CSR struct {
	// 国家代号，如CN
	Country []string `protobuf:"bytes,1,rep,name=country,proto3" json:"country,omitempty"`
	// 组织机构代号，如HyperLedger
	Organization []string `protobuf:"bytes,2,rep,name=organization,proto3" json:"organization,omitempty"`
	// 组织机构下部门代号，如Fabric（非必须）
	OrganizationalUnit []string `protobuf:"bytes,3,rep,name=organizationalUnit,proto3" json:"organizationalUnit,omitempty"`
	// 位置坐标信息（非必须）
	Locality []string `protobuf:"bytes,4,rep,name=locality,proto3" json:"locality,omitempty"`
	// 省份名称（非必须）
	Province []string `protobuf:"bytes,5,rep,name=province,proto3" json:"province,omitempty"`
	// 街道信息（非必须）
	StreetAddress []string `protobuf:"bytes,6,rep,name=streetAddress,proto3" json:"streetAddress,omitempty"`
	// 邮政编码（非必须）
	PostalCode []string `protobuf:"bytes,7,rep,name=postalCode,proto3" json:"postalCode,omitempty"`
	// 序列号（非必须）
	SerialNumber string `protobuf:"bytes,8,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	// 当前待申请证书最终受访域名，如example.com、org1.example.com等
	CommonName           string   `protobuf:"bytes,9,opt,name=commonName,proto3" json:"commonName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSR) Reset()         { *m = CSR{} }
func (m *CSR) String() string { return proto.CompactTextString(m) }
func (*CSR) ProtoMessage()    {}
func (*CSR) Descriptor() ([]byte, []int) {
	return fileDescriptor_42249d15fbfb5bb8, []int{12}
}

func (m *CSR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSR.Unmarshal(m, b)
}
func (m *CSR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSR.Marshal(b, m, deterministic)
}
func (m *CSR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSR.Merge(m, src)
}
func (m *CSR) XXX_Size() int {
	return xxx_messageInfo_CSR.Size(m)
}
func (m *CSR) XXX_DiscardUnknown() {
	xxx_messageInfo_CSR.DiscardUnknown(m)
}

var xxx_messageInfo_CSR proto.InternalMessageInfo

func (m *CSR) GetCountry() []string {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *CSR) GetOrganization() []string {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *CSR) GetOrganizationalUnit() []string {
	if m != nil {
		return m.OrganizationalUnit
	}
	return nil
}

func (m *CSR) GetLocality() []string {
	if m != nil {
		return m.Locality
	}
	return nil
}

func (m *CSR) GetProvince() []string {
	if m != nil {
		return m.Province
	}
	return nil
}

func (m *CSR) GetStreetAddress() []string {
	if m != nil {
		return m.StreetAddress
	}
	return nil
}

func (m *CSR) GetPostalCode() []string {
	if m != nil {
		return m.PostalCode
	}
	return nil
}

func (m *CSR) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *CSR) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func init() {
	proto.RegisterType((*ReqKeyConfig)(nil), "ca.ReqKeyConfig")
	proto.RegisterType((*RespKeyConfig)(nil), "ca.RespKeyConfig")
	proto.RegisterType((*ReqCreateLeague)(nil), "ca.ReqCreateLeague")
	proto.RegisterType((*RespCreateLeague)(nil), "ca.RespCreateLeague")
	proto.RegisterType((*ReqCreateCsr)(nil), "ca.ReqCreateCsr")
	proto.RegisterType((*RespCreateCsr)(nil), "ca.RespCreateCsr")
	proto.RegisterType((*ReqCreateOrgChild)(nil), "ca.ReqCreateOrgChild")
	proto.RegisterType((*RespCreateOrgChild)(nil), "ca.RespCreateOrgChild")
	proto.RegisterType((*OrgChild)(nil), "ca.OrgChild")
	proto.RegisterType((*EnrollInfo)(nil), "ca.EnrollInfo")
	proto.RegisterType((*EnrollRequest)(nil), "ca.EnrollRequest")
	proto.RegisterType((*EnrollAttribute)(nil), "ca.EnrollAttribute")
	proto.RegisterType((*CSR)(nil), "ca.CSR")
}

func init() { proto.RegisterFile("grpc/proto/ca/cert.proto", fileDescriptor_42249d15fbfb5bb8) }

var fileDescriptor_42249d15fbfb5bb8 = []byte{
	// 976 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x66, 0x62, 0x27, 0xf1, 0x94, 0x93, 0xdd, 0x4d, 0x83, 0xd0, 0xac, 0x59, 0xa1, 0x68, 0xc4,
	0xa2, 0x20, 0x81, 0x23, 0x05, 0x09, 0xce, 0xb6, 0x37, 0x12, 0x68, 0x97, 0x6c, 0xd4, 0xc9, 0x5e,
	0xb8, 0xb5, 0xdb, 0xe5, 0xc9, 0x48, 0xe3, 0xe9, 0x49, 0x77, 0x7b, 0x85, 0x79, 0x03, 0xae, 0xbc,
	0x0b, 0x27, 0x1e, 0x80, 0x23, 0xef, 0xc0, 0x8d, 0x33, 0x2f, 0x80, 0xaa, 0x7b, 0x7e, 0xed, 0x1c,
	0x56, 0xb9, 0xf9, 0xfb, 0xea, 0xeb, 0xa9, 0xaa, 0x6f, 0xaa, 0xda, 0x03, 0x51, 0xa2, 0x0b, 0x79,
	0x5e, 0x68, 0x65, 0xd5, 0xb9, 0x14, 0xe7, 0x12, 0xb5, 0x1d, 0x3b, 0xc4, 0xf6, 0xa4, 0x18, 0x8d,
	0xba, 0x51, 0x8d, 0x66, 0x9d, 0x95, 0xf1, 0xd1, 0xf3, 0x6e, 0x0c, 0xf3, 0xf5, 0xca, 0xf8, 0x50,
	0xfc, 0x67, 0x00, 0x47, 0x1c, 0xef, 0x5f, 0xe3, 0x66, 0xa6, 0xf2, 0x65, 0x9a, 0xb0, 0x31, 0x80,
	0xd4, 0x9b, 0xc2, 0xaa, 0xdb, 0x4d, 0x81, 0x51, 0x70, 0x1a, 0x9c, 0x3d, 0xb9, 0x78, 0x32, 0x96,
	0x62, 0x3c, 0xab, 0x59, 0xde, 0x52, 0xb0, 0xef, 0xe0, 0x08, 0xa5, 0x9c, 0x64, 0x89, 0xd2, 0xa9,
	0xbd, 0x5b, 0x45, 0x7b, 0xee, 0xc4, 0x33, 0x3a, 0x71, 0xd9, 0xe2, 0x7f, 0xf8, 0x88, 0x77, 0x74,
	0x74, 0x4e, 0x1b, 0xd1, 0x9c, 0xeb, 0x35, 0xe7, 0x78, 0x8b, 0xa7, 0x73, 0x6d, 0xdd, 0x74, 0x08,
	0x61, 0x0d, 0xe2, 0xdf, 0x02, 0x38, 0xe6, 0x68, 0x8a, 0xa6, 0xfc, 0x17, 0xd0, 0x97, 0x6a, 0x51,
	0x15, 0x3e, 0x70, 0x85, 0xab, 0x05, 0x72, 0xc7, 0xb2, 0x4f, 0xe1, 0x00, 0xb5, 0xfe, 0xc9, 0x24,
	0xae, 0xcc, 0x90, 0x97, 0x88, 0x9d, 0xc2, 0xb0, 0xd0, 0xe9, 0x6b, 0xdc, 0x4c, 0x37, 0x16, 0x8d,
	0xab, 0xe5, 0x88, 0xb7, 0x29, 0xa7, 0x58, 0xcf, 0x6b, 0x45, 0xbf, 0x54, 0x34, 0x54, 0xfc, 0x57,
	0x00, 0x4f, 0x39, 0xde, 0xcf, 0x34, 0x0a, 0x8b, 0x6f, 0x50, 0x24, 0x6b, 0x97, 0x6f, 0xa1, 0x56,
	0x22, 0xcd, 0x5d, 0x3d, 0x21, 0x2f, 0xd1, 0x76, 0xbe, 0xbd, 0xdd, 0x7c, 0x5f, 0xc2, 0x93, 0x42,
	0xa7, 0xb7, 0x99, 0xd9, 0x2a, 0x6a, 0x8b, 0x65, 0xcf, 0xa1, 0x27, 0x8d, 0x76, 0xf5, 0x0c, 0x2f,
	0x0e, 0x5d, 0xbb, 0x37, 0x9c, 0x13, 0xc7, 0xbe, 0x87, 0x63, 0x93, 0x26, 0x79, 0x63, 0xf1, 0xbe,
	0xf3, 0xe4, 0x84, 0x44, 0x37, 0xed, 0x00, 0xef, 0xea, 0xe2, 0xdf, 0x03, 0x78, 0x46, 0xae, 0x76,
	0x5a, 0x79, 0xb4, 0xb1, 0x52, 0xcc, 0x50, 0xdb, 0x8e, 0xb1, 0x2d, 0x8a, 0x1a, 0xb5, 0x99, 0x99,
	0xb5, 0x44, 0xde, 0xdb, 0x2d, 0x36, 0xfe, 0xc7, 0x0f, 0xaa, 0xaf, 0x69, 0x66, 0x34, 0x8b, 0xe1,
	0x28, 0x73, 0xa5, 0xbd, 0xf2, 0x0e, 0xfb, 0xc4, 0x1d, 0x8e, 0x45, 0x70, 0xa8, 0x74, 0x72, 0x25,
	0x56, 0xe8, 0x52, 0x87, 0xbc, 0x82, 0xec, 0x05, 0x84, 0x4a, 0x27, 0xe5, 0xd1, 0xbe, 0x8b, 0x35,
	0xc4, 0xf6, 0xfb, 0xd9, 0xdf, 0x7d, 0x3f, 0x9f, 0x41, 0x3f, 0xa7, 0xc7, 0x1e, 0x74, 0x8d, 0x77,
	0xe4, 0xae, 0xf3, 0x87, 0x1f, 0xe8, 0xbc, 0xf0, 0xe3, 0xdc, 0x34, 0xf9, 0x38, 0xd7, 0x47, 0x30,
	0x90, 0x46, 0xb7, 0x2d, 0xaf, 0x71, 0xbc, 0x80, 0x93, 0xda, 0xc6, 0xb7, 0x3a, 0x99, 0xdd, 0xa5,
	0xd9, 0x82, 0xbd, 0x74, 0x3e, 0xb5, 0x36, 0x7e, 0x48, 0x99, 0xde, 0x7a, 0x8a, 0x57, 0x31, 0x76,
	0x06, 0x03, 0x55, 0x1e, 0x71, 0x19, 0x87, 0x17, 0x47, 0xa5, 0xce, 0x71, 0xbc, 0x8e, 0xc6, 0xbf,
	0x00, 0x6b, 0x1a, 0xa9, 0xd3, 0x3c, 0xae, 0x1b, 0x06, 0x7d, 0xba, 0xeb, 0xca, 0x4e, 0xdc, 0x6f,
	0x7a, 0xb1, 0x34, 0x1f, 0x44, 0xfb, 0x71, 0xa9, 0x60, 0xfc, 0x5f, 0x00, 0x83, 0x3a, 0xa1, 0xdf,
	0xda, 0xdb, 0xcc, 0x78, 0x2f, 0x0e, 0xeb, 0xad, 0xad, 0x28, 0xf6, 0x35, 0x9c, 0xf8, 0x8d, 0xba,
	0x16, 0x1a, 0xf3, 0x72, 0x02, 0x0f, 0x9c, 0x6e, 0x37, 0xc0, 0xc6, 0xc0, 0xb4, 0x52, 0xf6, 0xb6,
	0x3b, 0xb0, 0xa1, 0x93, 0x3f, 0x10, 0xd9, 0x1d, 0x04, 0xf8, 0xb0, 0x41, 0xa0, 0x5b, 0x18, 0x73,
	0xad, 0xb2, 0xec, 0xc7, 0x7c, 0xa9, 0xa2, 0xa1, 0xf3, 0xda, 0xdd, 0xc2, 0x97, 0x35, 0xcb, 0x5b,
	0x8a, 0xf8, 0xef, 0x00, 0xa0, 0x09, 0xb9, 0xb5, 0x33, 0xfa, 0x1a, 0x57, 0xbe, 0xc0, 0xa0, 0x5c,
	0xbb, 0x86, 0xa2, 0xbe, 0x97, 0x62, 0xae, 0x53, 0x39, 0x13, 0x37, 0xa8, 0xdf, 0xa3, 0x7e, 0xc7,
	0xdf, 0x94, 0xbe, 0xef, 0x06, 0x68, 0x5b, 0x72, 0x65, 0xa7, 0xb8, 0x54, 0xda, 0x6f, 0x52, 0x8f,
	0x37, 0x04, 0x8d, 0x5b, 0xae, 0xec, 0x64, 0x69, 0xd1, 0x5f, 0x44, 0x3d, 0x5e, 0x63, 0x72, 0xc0,
	0x97, 0xc9, 0xf1, 0x7e, 0x8d, 0xc6, 0xba, 0x5d, 0x1a, 0x7a, 0x07, 0x2e, 0xdb, 0x01, 0xde, 0xd5,
	0xc5, 0xff, 0x06, 0x70, 0xdc, 0x11, 0x50, 0x9a, 0xb2, 0xe3, 0x57, 0xe5, 0x75, 0x5a, 0x63, 0x9a,
	0x1d, 0x83, 0x52, 0xa3, 0xad, 0x66, 0xc7, 0xa3, 0x7a, 0x4d, 0x7b, 0x0f, 0xad, 0x69, 0x04, 0x87,
	0x85, 0x56, 0xcb, 0x34, 0xc3, 0xf2, 0x06, 0xa8, 0x20, 0xfb, 0x04, 0xf6, 0x33, 0x31, 0xc7, 0xcc,
	0x55, 0x1b, 0x72, 0x0f, 0x28, 0x89, 0x14, 0x57, 0xd5, 0xd6, 0x87, 0xbc, 0x44, 0xa4, 0xbe, 0x53,
	0xc6, 0xd2, 0x7c, 0xf5, 0x48, 0xed, 0x00, 0xfb, 0x0a, 0xf6, 0x85, 0xb5, 0xda, 0x44, 0x83, 0xd3,
	0xde, 0xd9, 0xf0, 0xe2, 0xe3, 0xa6, 0xe3, 0x89, 0xb5, 0x3a, 0x9d, 0xaf, 0x2d, 0x72, 0xaf, 0x88,
	0x27, 0xf0, 0x74, 0x2b, 0x42, 0x43, 0xef, 0x0a, 0xf7, 0x8d, 0xfa, 0x7a, 0x47, 0x30, 0x50, 0x85,
	0x4d, 0x55, 0x2e, 0x32, 0xd7, 0xe6, 0x80, 0xd7, 0x38, 0xfe, 0x63, 0x0f, 0x7a, 0xb3, 0x1b, 0x4e,
	0x3d, 0x49, 0xb5, 0xce, 0xad, 0xde, 0x44, 0x81, 0xab, 0xa6, 0x82, 0x74, 0x5f, 0x2a, 0x9d, 0x88,
	0x3c, 0xfd, 0x55, 0xd0, 0x99, 0x68, 0xcf, 0x85, 0x3b, 0x1c, 0xcd, 0x77, 0x1b, 0x8b, 0xec, 0x5d,
	0x9e, 0xd2, 0xe2, 0x91, 0xf2, 0x81, 0x08, 0x55, 0x94, 0x29, 0x29, 0xb2, 0xd4, 0x6e, 0xa2, 0xbe,
	0x53, 0xd5, 0x98, 0x62, 0x85, 0x56, 0xef, 0xd3, 0x5c, 0x62, 0xb4, 0xef, 0x63, 0x15, 0x66, 0x5f,
	0xc0, 0xb1, 0xb1, 0x1a, 0xd1, 0x4e, 0x16, 0x0b, 0x8d, 0x86, 0x36, 0x8e, 0x04, 0x5d, 0x92, 0x7d,
	0x0e, 0x50, 0x28, 0x63, 0x45, 0x46, 0x97, 0x44, 0x69, 0x6e, 0x8b, 0xa1, 0x8e, 0x0c, 0xea, 0x54,
	0x64, 0x57, 0xeb, 0xd5, 0x1c, 0x75, 0x34, 0xf0, 0xff, 0x00, 0x6d, 0x8e, 0x9e, 0x21, 0xd5, 0x6a,
	0xa5, 0x72, 0xf7, 0xde, 0x42, 0xa7, 0x68, 0x31, 0xd3, 0x09, 0xbc, 0x94, 0xf9, 0x58, 0xcc, 0x51,
	0xa7, 0x72, 0xec, 0x07, 0xff, 0x1b, 0x99, 0xa5, 0x98, 0xdb, 0x31, 0x7d, 0x34, 0xf9, 0xaf, 0xa4,
	0xb1, 0x14, 0xd3, 0x90, 0xb6, 0xfa, 0x9a, 0xd0, 0xcf, 0xc7, 0x9d, 0xcf, 0xa9, 0xf9, 0x81, 0xfb,
	0xf5, 0xed, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x77, 0x86, 0xb4, 0xc4, 0xa0, 0x09, 0x00, 0x00,
}
