// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/core/channel.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqChannelCreate struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain            string   `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	ChannelID            string   `protobuf:"bytes,3,opt,name=channelID,proto3" json:"channelID,omitempty"`
	ChannelTxBytes       []byte   `protobuf:"bytes,4,opt,name=channelTxBytes,proto3" json:"channelTxBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqChannelCreate) Reset()         { *m = ReqChannelCreate{} }
func (m *ReqChannelCreate) String() string { return proto.CompactTextString(m) }
func (*ReqChannelCreate) ProtoMessage()    {}
func (*ReqChannelCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{0}
}

func (m *ReqChannelCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqChannelCreate.Unmarshal(m, b)
}
func (m *ReqChannelCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqChannelCreate.Marshal(b, m, deterministic)
}
func (m *ReqChannelCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqChannelCreate.Merge(m, src)
}
func (m *ReqChannelCreate) XXX_Size() int {
	return xxx_messageInfo_ReqChannelCreate.Size(m)
}
func (m *ReqChannelCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqChannelCreate.DiscardUnknown(m)
}

var xxx_messageInfo_ReqChannelCreate proto.InternalMessageInfo

func (m *ReqChannelCreate) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqChannelCreate) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqChannelCreate) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *ReqChannelCreate) GetChannelTxBytes() []byte {
	if m != nil {
		return m.ChannelTxBytes
	}
	return nil
}

type RespChannelCreate struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	TxId                 string   `protobuf:"bytes,3,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespChannelCreate) Reset()         { *m = RespChannelCreate{} }
func (m *RespChannelCreate) String() string { return proto.CompactTextString(m) }
func (*RespChannelCreate) ProtoMessage()    {}
func (*RespChannelCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{1}
}

func (m *RespChannelCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespChannelCreate.Unmarshal(m, b)
}
func (m *RespChannelCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespChannelCreate.Marshal(b, m, deterministic)
}
func (m *RespChannelCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespChannelCreate.Merge(m, src)
}
func (m *RespChannelCreate) XXX_Size() int {
	return xxx_messageInfo_RespChannelCreate.Size(m)
}
func (m *RespChannelCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_RespChannelCreate.DiscardUnknown(m)
}

var xxx_messageInfo_RespChannelCreate proto.InternalMessageInfo

func (m *RespChannelCreate) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespChannelCreate) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespChannelCreate) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type ReqChannelJoin struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain            string   `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	PeerName             string   `protobuf:"bytes,3,opt,name=peerName,proto3" json:"peerName,omitempty"`
	ChannelID            string   `protobuf:"bytes,4,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqChannelJoin) Reset()         { *m = ReqChannelJoin{} }
func (m *ReqChannelJoin) String() string { return proto.CompactTextString(m) }
func (*ReqChannelJoin) ProtoMessage()    {}
func (*ReqChannelJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{2}
}

func (m *ReqChannelJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqChannelJoin.Unmarshal(m, b)
}
func (m *ReqChannelJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqChannelJoin.Marshal(b, m, deterministic)
}
func (m *ReqChannelJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqChannelJoin.Merge(m, src)
}
func (m *ReqChannelJoin) XXX_Size() int {
	return xxx_messageInfo_ReqChannelJoin.Size(m)
}
func (m *ReqChannelJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqChannelJoin.DiscardUnknown(m)
}

var xxx_messageInfo_ReqChannelJoin proto.InternalMessageInfo

func (m *ReqChannelJoin) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqChannelJoin) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqChannelJoin) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *ReqChannelJoin) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type RespChannelJoin struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespChannelJoin) Reset()         { *m = RespChannelJoin{} }
func (m *RespChannelJoin) String() string { return proto.CompactTextString(m) }
func (*RespChannelJoin) ProtoMessage()    {}
func (*RespChannelJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{3}
}

func (m *RespChannelJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespChannelJoin.Unmarshal(m, b)
}
func (m *RespChannelJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespChannelJoin.Marshal(b, m, deterministic)
}
func (m *RespChannelJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespChannelJoin.Merge(m, src)
}
func (m *RespChannelJoin) XXX_Size() int {
	return xxx_messageInfo_RespChannelJoin.Size(m)
}
func (m *RespChannelJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_RespChannelJoin.DiscardUnknown(m)
}

var xxx_messageInfo_RespChannelJoin proto.InternalMessageInfo

func (m *RespChannelJoin) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespChannelJoin) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type ReqChannelList struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain            string   `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	PeerName             string   `protobuf:"bytes,3,opt,name=peerName,proto3" json:"peerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqChannelList) Reset()         { *m = ReqChannelList{} }
func (m *ReqChannelList) String() string { return proto.CompactTextString(m) }
func (*ReqChannelList) ProtoMessage()    {}
func (*ReqChannelList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{4}
}

func (m *ReqChannelList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqChannelList.Unmarshal(m, b)
}
func (m *ReqChannelList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqChannelList.Marshal(b, m, deterministic)
}
func (m *ReqChannelList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqChannelList.Merge(m, src)
}
func (m *ReqChannelList) XXX_Size() int {
	return xxx_messageInfo_ReqChannelList.Size(m)
}
func (m *ReqChannelList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqChannelList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqChannelList proto.InternalMessageInfo

func (m *ReqChannelList) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqChannelList) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqChannelList) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

type RespChannelList struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	ChannelIDs           []string `protobuf:"bytes,3,rep,name=channelIDs,proto3" json:"channelIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespChannelList) Reset()         { *m = RespChannelList{} }
func (m *RespChannelList) String() string { return proto.CompactTextString(m) }
func (*RespChannelList) ProtoMessage()    {}
func (*RespChannelList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{5}
}

func (m *RespChannelList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespChannelList.Unmarshal(m, b)
}
func (m *RespChannelList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespChannelList.Marshal(b, m, deterministic)
}
func (m *RespChannelList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespChannelList.Merge(m, src)
}
func (m *RespChannelList) XXX_Size() int {
	return xxx_messageInfo_RespChannelList.Size(m)
}
func (m *RespChannelList) XXX_DiscardUnknown() {
	xxx_messageInfo_RespChannelList.DiscardUnknown(m)
}

var xxx_messageInfo_RespChannelList proto.InternalMessageInfo

func (m *RespChannelList) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespChannelList) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespChannelList) GetChannelIDs() []string {
	if m != nil {
		return m.ChannelIDs
	}
	return nil
}

type ReqChannelConfigBlock struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain string `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	// 节点名称，如peer0
	PeerName             string   `protobuf:"bytes,3,opt,name=peerName,proto3" json:"peerName,omitempty"`
	ChannelID            string   `protobuf:"bytes,4,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqChannelConfigBlock) Reset()         { *m = ReqChannelConfigBlock{} }
func (m *ReqChannelConfigBlock) String() string { return proto.CompactTextString(m) }
func (*ReqChannelConfigBlock) ProtoMessage()    {}
func (*ReqChannelConfigBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{6}
}

func (m *ReqChannelConfigBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqChannelConfigBlock.Unmarshal(m, b)
}
func (m *ReqChannelConfigBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqChannelConfigBlock.Marshal(b, m, deterministic)
}
func (m *ReqChannelConfigBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqChannelConfigBlock.Merge(m, src)
}
func (m *ReqChannelConfigBlock) XXX_Size() int {
	return xxx_messageInfo_ReqChannelConfigBlock.Size(m)
}
func (m *ReqChannelConfigBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqChannelConfigBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ReqChannelConfigBlock proto.InternalMessageInfo

func (m *ReqChannelConfigBlock) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqChannelConfigBlock) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqChannelConfigBlock) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *ReqChannelConfigBlock) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type RespChannelConfigBlock struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	// 通道配置区块信息，解析使用InspectBlock即可
	GenesisBlockBytes    []byte   `protobuf:"bytes,3,opt,name=genesisBlockBytes,proto3" json:"genesisBlockBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespChannelConfigBlock) Reset()         { *m = RespChannelConfigBlock{} }
func (m *RespChannelConfigBlock) String() string { return proto.CompactTextString(m) }
func (*RespChannelConfigBlock) ProtoMessage()    {}
func (*RespChannelConfigBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{7}
}

func (m *RespChannelConfigBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespChannelConfigBlock.Unmarshal(m, b)
}
func (m *RespChannelConfigBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespChannelConfigBlock.Marshal(b, m, deterministic)
}
func (m *RespChannelConfigBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespChannelConfigBlock.Merge(m, src)
}
func (m *RespChannelConfigBlock) XXX_Size() int {
	return xxx_messageInfo_RespChannelConfigBlock.Size(m)
}
func (m *RespChannelConfigBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_RespChannelConfigBlock.DiscardUnknown(m)
}

var xxx_messageInfo_RespChannelConfigBlock proto.InternalMessageInfo

func (m *RespChannelConfigBlock) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespChannelConfigBlock) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespChannelConfigBlock) GetGenesisBlockBytes() []byte {
	if m != nil {
		return m.GenesisBlockBytes
	}
	return nil
}

type ReqChannelUpdateBlock struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain string `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	// 节点名称，如peer0
	PeerName  string `protobuf:"bytes,3,opt,name=peerName,proto3" json:"peerName,omitempty"`
	ChannelID string `protobuf:"bytes,4,opt,name=channelID,proto3" json:"channelID,omitempty"`
	// 联盟下协会
	Consortium string `protobuf:"bytes,5,opt,name=consortium,proto3" json:"consortium,omitempty"`
	// 新增组织名称，如org3
	NewOrgName string `protobuf:"bytes,6,opt,name=newOrgName,proto3" json:"newOrgName,omitempty"`
	// 通道配置区块信息，解析使用InspectBlock即可
	GenesisBlockBytes    []byte   `protobuf:"bytes,7,opt,name=genesisBlockBytes,proto3" json:"genesisBlockBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqChannelUpdateBlock) Reset()         { *m = ReqChannelUpdateBlock{} }
func (m *ReqChannelUpdateBlock) String() string { return proto.CompactTextString(m) }
func (*ReqChannelUpdateBlock) ProtoMessage()    {}
func (*ReqChannelUpdateBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{8}
}

func (m *ReqChannelUpdateBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqChannelUpdateBlock.Unmarshal(m, b)
}
func (m *ReqChannelUpdateBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqChannelUpdateBlock.Marshal(b, m, deterministic)
}
func (m *ReqChannelUpdateBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqChannelUpdateBlock.Merge(m, src)
}
func (m *ReqChannelUpdateBlock) XXX_Size() int {
	return xxx_messageInfo_ReqChannelUpdateBlock.Size(m)
}
func (m *ReqChannelUpdateBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqChannelUpdateBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ReqChannelUpdateBlock proto.InternalMessageInfo

func (m *ReqChannelUpdateBlock) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqChannelUpdateBlock) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqChannelUpdateBlock) GetPeerName() string {
	if m != nil {
		return m.PeerName
	}
	return ""
}

func (m *ReqChannelUpdateBlock) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *ReqChannelUpdateBlock) GetConsortium() string {
	if m != nil {
		return m.Consortium
	}
	return ""
}

func (m *ReqChannelUpdateBlock) GetNewOrgName() string {
	if m != nil {
		return m.NewOrgName
	}
	return ""
}

func (m *ReqChannelUpdateBlock) GetGenesisBlockBytes() []byte {
	if m != nil {
		return m.GenesisBlockBytes
	}
	return nil
}

type RespChannelUpdateBlock struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	// 通道配置区块更新信息
	EnvelopeBytes        []byte   `protobuf:"bytes,3,opt,name=envelopeBytes,proto3" json:"envelopeBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespChannelUpdateBlock) Reset()         { *m = RespChannelUpdateBlock{} }
func (m *RespChannelUpdateBlock) String() string { return proto.CompactTextString(m) }
func (*RespChannelUpdateBlock) ProtoMessage()    {}
func (*RespChannelUpdateBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{9}
}

func (m *RespChannelUpdateBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespChannelUpdateBlock.Unmarshal(m, b)
}
func (m *RespChannelUpdateBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespChannelUpdateBlock.Marshal(b, m, deterministic)
}
func (m *RespChannelUpdateBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespChannelUpdateBlock.Merge(m, src)
}
func (m *RespChannelUpdateBlock) XXX_Size() int {
	return xxx_messageInfo_RespChannelUpdateBlock.Size(m)
}
func (m *RespChannelUpdateBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_RespChannelUpdateBlock.DiscardUnknown(m)
}

var xxx_messageInfo_RespChannelUpdateBlock proto.InternalMessageInfo

func (m *RespChannelUpdateBlock) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespChannelUpdateBlock) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespChannelUpdateBlock) GetEnvelopeBytes() []byte {
	if m != nil {
		return m.EnvelopeBytes
	}
	return nil
}

type ReqChannelSign struct {
	// 联盟根域名，如：example.com
	LeagueDomain string `protobuf:"bytes,1,opt,name=leagueDomain,proto3" json:"leagueDomain,omitempty"`
	// 组织域名，如org.com
	OrgDomain string `protobuf:"bytes,2,opt,name=orgDomain,proto3" json:"orgDomain,omitempty"`
	// 组织名称，如org0
	OrgName string `protobuf:"bytes,3,opt,name=orgName,proto3" json:"orgName,omitempty"`
	// 组织用户名称，如Admin
	OrgUser string `protobuf:"bytes,4,opt,name=orgUser,proto3" json:"orgUser,omitempty"`
	// 计划更新的通道名称
	ChannelID string `protobuf:"bytes,5,opt,name=channelID,proto3" json:"channelID,omitempty"`
	// 通道配置区块更新信息
	EnvelopeBytes        []byte   `protobuf:"bytes,6,opt,name=envelopeBytes,proto3" json:"envelopeBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqChannelSign) Reset()         { *m = ReqChannelSign{} }
func (m *ReqChannelSign) String() string { return proto.CompactTextString(m) }
func (*ReqChannelSign) ProtoMessage()    {}
func (*ReqChannelSign) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{10}
}

func (m *ReqChannelSign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqChannelSign.Unmarshal(m, b)
}
func (m *ReqChannelSign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqChannelSign.Marshal(b, m, deterministic)
}
func (m *ReqChannelSign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqChannelSign.Merge(m, src)
}
func (m *ReqChannelSign) XXX_Size() int {
	return xxx_messageInfo_ReqChannelSign.Size(m)
}
func (m *ReqChannelSign) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqChannelSign.DiscardUnknown(m)
}

var xxx_messageInfo_ReqChannelSign proto.InternalMessageInfo

func (m *ReqChannelSign) GetLeagueDomain() string {
	if m != nil {
		return m.LeagueDomain
	}
	return ""
}

func (m *ReqChannelSign) GetOrgDomain() string {
	if m != nil {
		return m.OrgDomain
	}
	return ""
}

func (m *ReqChannelSign) GetOrgName() string {
	if m != nil {
		return m.OrgName
	}
	return ""
}

func (m *ReqChannelSign) GetOrgUser() string {
	if m != nil {
		return m.OrgUser
	}
	return ""
}

func (m *ReqChannelSign) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *ReqChannelSign) GetEnvelopeBytes() []byte {
	if m != nil {
		return m.EnvelopeBytes
	}
	return nil
}

type RespChannelSign struct {
	// 请求返回结果：success=0；fail=1
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=core.Code" json:"code,omitempty"`
	// 当且仅当返回码为1时，此处包含错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	// 通道配置区块更新信息
	EnvelopeBytes        []byte   `protobuf:"bytes,3,opt,name=envelopeBytes,proto3" json:"envelopeBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespChannelSign) Reset()         { *m = RespChannelSign{} }
func (m *RespChannelSign) String() string { return proto.CompactTextString(m) }
func (*RespChannelSign) ProtoMessage()    {}
func (*RespChannelSign) Descriptor() ([]byte, []int) {
	return fileDescriptor_c39a40e2d9ca3493, []int{11}
}

func (m *RespChannelSign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespChannelSign.Unmarshal(m, b)
}
func (m *RespChannelSign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespChannelSign.Marshal(b, m, deterministic)
}
func (m *RespChannelSign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespChannelSign.Merge(m, src)
}
func (m *RespChannelSign) XXX_Size() int {
	return xxx_messageInfo_RespChannelSign.Size(m)
}
func (m *RespChannelSign) XXX_DiscardUnknown() {
	xxx_messageInfo_RespChannelSign.DiscardUnknown(m)
}

var xxx_messageInfo_RespChannelSign proto.InternalMessageInfo

func (m *RespChannelSign) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespChannelSign) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespChannelSign) GetEnvelopeBytes() []byte {
	if m != nil {
		return m.EnvelopeBytes
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqChannelCreate)(nil), "core.ReqChannelCreate")
	proto.RegisterType((*RespChannelCreate)(nil), "core.RespChannelCreate")
	proto.RegisterType((*ReqChannelJoin)(nil), "core.ReqChannelJoin")
	proto.RegisterType((*RespChannelJoin)(nil), "core.RespChannelJoin")
	proto.RegisterType((*ReqChannelList)(nil), "core.ReqChannelList")
	proto.RegisterType((*RespChannelList)(nil), "core.RespChannelList")
	proto.RegisterType((*ReqChannelConfigBlock)(nil), "core.ReqChannelConfigBlock")
	proto.RegisterType((*RespChannelConfigBlock)(nil), "core.RespChannelConfigBlock")
	proto.RegisterType((*ReqChannelUpdateBlock)(nil), "core.ReqChannelUpdateBlock")
	proto.RegisterType((*RespChannelUpdateBlock)(nil), "core.RespChannelUpdateBlock")
	proto.RegisterType((*ReqChannelSign)(nil), "core.ReqChannelSign")
	proto.RegisterType((*RespChannelSign)(nil), "core.RespChannelSign")
}

func init() { proto.RegisterFile("grpc/proto/core/channel.proto", fileDescriptor_c39a40e2d9ca3493) }

var fileDescriptor_c39a40e2d9ca3493 = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x57, 0xd6, 0xac, 0xa3, 0x4f, 0xa5, 0x63, 0x91, 0x98, 0xa2, 0x01, 0x53, 0x65, 0x21, 0xe8,
	0x01, 0x52, 0x09, 0xbe, 0x41, 0xbb, 0x03, 0x45, 0xfc, 0x53, 0x60, 0x17, 0x2e, 0x28, 0x75, 0xdf,
	0x82, 0x45, 0x6a, 0x07, 0xdb, 0x1d, 0xe3, 0x82, 0xc4, 0x9d, 0x1b, 0x37, 0x3e, 0x12, 0x9f, 0x0a,
	0xc5, 0xf1, 0x5a, 0x3b, 0x1b, 0x97, 0x68, 0xd3, 0x6e, 0x79, 0xbf, 0xf7, 0x12, 0xff, 0xfe, 0xc4,
	0x36, 0x3c, 0xc8, 0x65, 0x49, 0xc7, 0xa5, 0x14, 0x5a, 0x8c, 0xa9, 0x90, 0x38, 0xa6, 0x9f, 0x33,
	0xce, 0xb1, 0x48, 0x0c, 0x14, 0x85, 0x15, 0x76, 0x70, 0xaf, 0x39, 0x84, 0x7c, 0xb5, 0x54, 0xf5,
	0x08, 0xf9, 0x13, 0xc0, 0x9d, 0x14, 0xbf, 0x4e, 0xeb, 0xf7, 0xa6, 0x12, 0x33, 0x8d, 0x11, 0x81,
	0x7e, 0x81, 0x59, 0xbe, 0xc2, 0x23, 0xb1, 0xcc, 0x18, 0x8f, 0x83, 0x61, 0x30, 0xea, 0xa5, 0x1e,
	0x16, 0xdd, 0x87, 0x9e, 0x90, 0xb9, 0x1d, 0xd8, 0x32, 0x03, 0x1b, 0xa0, 0xea, 0x5a, 0x2a, 0xb3,
	0xa3, 0xb8, 0x53, 0x77, 0xd7, 0x40, 0xf4, 0x08, 0x06, 0xb6, 0xf8, 0x70, 0x36, 0xf9, 0xae, 0x51,
	0xc5, 0xe1, 0x30, 0x18, 0xf5, 0xd3, 0x06, 0x4a, 0x3e, 0xc1, 0x5e, 0x8a, 0xaa, 0xf4, 0xc9, 0x1d,
	0x42, 0x48, 0xc5, 0x02, 0x0d, 0xa9, 0xc1, 0x33, 0x48, 0x2a, 0x49, 0xc9, 0x54, 0x2c, 0x30, 0x35,
	0x78, 0xb4, 0x0f, 0x5d, 0x94, 0xf2, 0xb5, 0xca, 0x2d, 0x2b, 0x5b, 0x45, 0x11, 0x84, 0xfa, 0x6c,
	0xb6, 0xb0, 0x6c, 0xcc, 0x33, 0xf9, 0x15, 0xc0, 0x60, 0xa3, 0xfe, 0xa5, 0x60, 0xfc, 0x0a, 0xb4,
	0x1f, 0xc0, 0xad, 0x12, 0x51, 0xbe, 0xc9, 0x96, 0x68, 0x17, 0x5b, 0xd7, 0xbe, 0x2f, 0x61, 0xc3,
	0x17, 0x32, 0x83, 0x5d, 0x47, 0xaf, 0xa1, 0xd3, 0x52, 0x2d, 0xe1, 0xae, 0xb0, 0x57, 0x4c, 0xe9,
	0xeb, 0x15, 0x46, 0x98, 0x47, 0xdd, 0x2c, 0xd8, 0x36, 0xa8, 0x43, 0x80, 0xb5, 0x25, 0x2a, 0xee,
	0x0c, 0x3b, 0xa3, 0x5e, 0xea, 0x20, 0xe4, 0x77, 0x00, 0x77, 0x9d, 0x5f, 0x56, 0xf0, 0x13, 0x96,
	0x4f, 0x0a, 0x41, 0xbf, 0xdc, 0x68, 0x76, 0x3f, 0x60, 0xdf, 0xfd, 0x57, 0x1d, 0x56, 0x6d, 0x7d,
	0x78, 0x02, 0x7b, 0x39, 0x72, 0x54, 0x4c, 0x99, 0xef, 0xd4, 0x1b, 0xa5, 0x63, 0x36, 0xca, 0xc5,
	0x06, 0xf9, 0xb9, 0xe5, 0xba, 0x72, 0x5c, 0x2e, 0x32, 0x8d, 0x37, 0xee, 0x8a, 0xc9, 0x52, 0x70,
	0x25, 0xa4, 0x66, 0xab, 0x65, 0xbc, 0x6d, 0xda, 0x0e, 0x52, 0xf5, 0x39, 0x7e, 0x7b, 0x2b, 0x73,
	0xf3, 0xed, 0x6e, 0xdd, 0xdf, 0x20, 0x97, 0x7b, 0xb0, 0xf3, 0x3f, 0x0f, 0x4e, 0xbd, 0x0c, 0x5c,
	0x0f, 0xda, 0x66, 0xf0, 0x10, 0x6e, 0x23, 0x3f, 0xc5, 0x42, 0x94, 0xe8, 0xfa, 0xef, 0x83, 0xe4,
	0xaf, 0x77, 0x8c, 0xbc, 0x67, 0xf9, 0x55, 0x1c, 0x23, 0x31, 0xec, 0x08, 0xeb, 0x4b, 0xed, 0xf9,
	0x79, 0x69, 0x3b, 0xc7, 0x0a, 0xa5, 0x35, 0xfc, 0xbc, 0xf4, 0xc3, 0xd8, 0x6e, 0x86, 0x71, 0x41,
	0x4c, 0xf7, 0x32, 0x31, 0xc2, 0xdb, 0xc9, 0x46, 0xcc, 0xb5, 0xba, 0x37, 0x79, 0x01, 0x8f, 0x29,
	0x4f, 0xb2, 0x39, 0x4a, 0x46, 0x93, 0x93, 0x6c, 0x2e, 0x19, 0x7d, 0x4a, 0x0b, 0x86, 0x5c, 0x27,
	0xd5, 0xcd, 0x55, 0x5f, 0x54, 0x66, 0xcd, 0x49, 0xdf, 0xb2, 0x7a, 0x57, 0x41, 0x1f, 0x77, 0x1b,
	0x17, 0xdb, 0xbc, 0x6b, 0x9e, 0x9f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x1a, 0x39, 0xd0,
	0x17, 0x07, 0x00, 0x00,
}
