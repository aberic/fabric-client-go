syntax = "proto3";

option java_package = "cn.aberic.fabric-client.grpc.proto.config";
option java_outer_classname = "ConfigProto";
option go_package = "grpc/proto/config";

package config;

message ReqConfigInit {
    // Version 内容的版本。用于SDK应用相应的解析规则
    string version = 1;
    // 联盟根域名，如：example.com
    string leagueDomain = 2;
    // 排序节点信息
    Orderer orderer = 3;
    // 组织节点信息
    Org org = 4;
    // Client go sdk 使用的客户端
    Client client = 5;
    // 联盟通道信息集合
    map<string, Channel> channels = 6;
}

message ReqConfigList {
    int32 list = 1;
}

message ReqConfig {
    string configID = 1;
}

message ReqConfigRecover {
    repeated string configIDs = 1;
}

// 组织节点信息
message Org {
    // 必填参数，预测或确认该值，组织根域名，并不一定要与联盟根域名相同，如：org.com
    string domain = 2;
    // 必填参数，预测或确认该值，这个应用程序实例属于某个组织，值必须是在“组织”下定义的组织的名称，如：Org1或league-org1
    string name = 3;
    // 可选参数，组织在创世中的ID，如：Org1MSP，默认${name}MSP
    string mspID = 4;
    // 必填参数，预测或确认该值，组织当前使用用户，如：Admin/User0
    string username = 5;
    // 组织下节点集合
    repeated Peer peers = 6;
    // 组织下用户集合
    repeated User users = 7;
    // 组织下fabric-ca集合
    repeated CertificateAuthority cas = 8;
    // 组织根证书
    bytes certBytes = 9;
    // 组织tls根证书
    bytes tlsCertBytes = 10;
}

// 排序节点信息
message Orderer {
    // 排序根域名，并不一定要与联盟根域名相同，如：order.com
    string domain = 2;
    // 这个应用程序实例属于某个组织，值必须是在“组织”下定义的组织的名称，如：Order或league-order
    string name = 3;
    // 可选参数，组织在创世中的ID，如：OrderMSP，默认${name}MSP
    string mspID = 4;
    // 组织当前使用用户，如：Admin/User0
    string username = 5;
    // 用户信息
    User user = 7;
    // 组织可访问orderer集合
    repeated Node nodes = 8;
    // 组织根证书
    bytes certBytes = 9;
    // 组织tls根证书
    bytes tlsCertBytes = 10;
}

// Client go sdk 使用的客户端
message Client {
    // 日志级别，debug、info、warn、error等
    ClientLogging logging = 2;
    // 节点超时的全局配置，如果省略此部分，则将使用缺省值
    ClientPeer peer = 3;
    // 事件服务超时的全局配置，如果省略此部分，则将使用缺省值
    ClientEventService eventService = 4;
    // orderer超时的全局配置，如果省略此部分，则将使用缺省值
    ClientOrder order = 5;
    // 超时的全局配置，如果省略此部分，则将使用缺省值
    ClientGlobal global = 6;
    // 客户端的BCCSP配置
    ClientBCCSP BCCSP = 9;
    bool tls = 10;
}

// 客户端日志设置对象
message ClientLogging {
    // 默认info
    string level = 1;
}

message ClientPeer {
    ClientPeerTimeout timeout = 1;
}

message ClientPeerTimeout {
    string connection = 1;
    string response = 2;
    ClientPeerTimeoutDiscovery discovery = 3;
}

message ClientPeerTimeoutDiscovery {
    // GreyListExpiry 发现服务失效列表筛选器的有效期。
    //
    // 通道客户端将列出脱机的失效节点名单，防止在后续重试中重新选择它们。
    //
    // 这个间隔将定义一个节点被灰列出的时间
    string greyListExpiry = 1;
}

message ClientEventService {
    ClientEventServiceTimeout timeout = 1;
}

message ClientEventServiceTimeout {
    string registrationResponse = 1;
}

message ClientOrder {
    ClientOrderTimeout timeout = 1;
}

message ClientOrderTimeout {
    string connection = 1;
    string response = 2;
}

message ClientGlobal {
    ClientGlobalTimeout timeout = 1;
    ClientGlobalCache cache = 2;
}

message ClientGlobalTimeout {
    string query = 1;
    string execute = 2;
    string resmgmt = 3;
}

message ClientGlobalCache {
    string connectionIdle = 1;
    string eventServiceIdle = 2;
    string channelConfig = 3;
    string channelMembership = 4;
    string discovery = 5;
    string selection = 6;
}

message ClientCredentialStoreCryptoStore {
    string path = 1;
}

message ClientBCCSP {
    ClientBCCSPSecurity security = 1;
}

message ClientBCCSPSecurity {
    bool enabled = 1;
    ClientBCCSPSecurityDefault default = 2;
    string hashAlgorithm = 3;
    bool softVerify = 4;
    int32 level = 5;
}

message ClientBCCSPSecurityDefault {
    string provider = 1;
}

// 联盟通道信息
message Channel {
    // 已知加入该通道的peer节点名称集合，如[peer0, peer1]
    repeated string peerNames = 1;
    // 可选参数，应用程序可以使用这些选项来执行通道操作，如检索通道配置等。
    Policy Policies = 2;
}

// 可选参数，应用程序可以使用这些选项来执行通道操作，如检索通道配置等
message Policy {
    // 可选参数，用于检索通道配置块的选项
    QueryChannelConfig queryChannelConfig = 1;
    // 可选参数，检索发现信息的选项
    Discovery discovery = 2;
    // 可选参数，事件服务的选项
    EventService eventService = 3;
}

// 可选参数，用于检索通道配置块的选项
message QueryChannelConfig {
    // 可选参数，最小成功响应数(来自目标/节点)
    int32 minResponses = 1;
    // 可选参数，通道配置将为这些数目的随机目标检索
    int32 maxTargets = 2;
    // 可选参数，查询配置块的重试选项
    CommonRetryOpts retryOpts = 3;
}

// 可选参数，查询配置块的重试选项
message CommonRetryOpts {
    // 可选参数，number of retry attempts
    int32 attempts = 1;
    // 可选参数，第一次重试尝试的回退间隔
    string initialBackoff = 2;
    // 可选参数，任何重试尝试的最大回退间隔
    string maxBackoff = 3;
    // 可选参数，该因子使初始回退期呈指数递增
    float backoffFactor = 4;
}

// 可选参数，检索发现信息的选项
message Discovery {
    // 可选参数，发现信息将检索这些随机目标的数量
    int32 maxTargets = 1;
    // 可选参数，查询配置块的重试选项
    CommonRetryOpts retryOpts = 2;
}

// 可选参数，事件服务的选项
message EventService {
    // 可选参数
    //
    // PreferOrg:
    // 根据块高度滞后阈值确定哪些对等点是合适的，尽管它们更适用当前组织中的对等点(只要它们的块高度高于配置的阈值)。如果当前组织中的对等点都不合适，则选择另一个组织中的对等点
    //
    // MinBlockHeight:
    // 根据块高度滞后阈值选择最佳的对等点。所有对等点的最大块高度被确定，那些块高度低于最大高度但高于规定的“滞后”阈值的对等点被负载均衡。不考虑其他节点
    //
    // Balanced:
    // 使用配置的平衡器选择对等点
    string resolverStrategy = 1;
    // 可选参数
    //
    // 当选择一个对等点连接到可能的值时使用的负载均衡[Random (default), RoundRobin]
    string balancer = 2;
    // 可选参数
    //
    // 设置块高度滞后阈值。此值用于选择要连接的对等点。如果一个节点落后于最新的节点超过给定的块数，那么它将被排除在选择之外
    // 注意，此参数仅适用于minBlockHeightResolverMode设置为ResolveByThreshold时
    // 默认值:5
    int64 blockHeightLagThreshold = 3;
    // 可选参数
    //
    // reconnectBlockHeightLagThreshold—如果对等方的块高度低于指定的块数，则事件客户机将断开与对等方的连接，并重新连接到性能更好的对等方
    //
    // 注意，此参数仅适用于peerMonitor设置为Enabled(默认)的情况
    //
    // 默认值:10
    //
    // 注意:设置此值过低可能会导致事件客户端过于频繁地断开/重新连接，从而影响性能
    int64 reconnectBlockHeightLagThreshold = 4;
    // 可选参数
    //
    // peerMonitorPeriod是监视连接的对等点以查看事件客户端是否应该断开连接并重新连接到另一个对等点的时间段
    //
    // 默认:0(禁用)用于平衡冲突解决策略;优先级和MinBlockHeight策略的5s
    string peerMonitorPeriod = 5;
}

// 发送事务和通道创建/更新请求
message Node {
    // orderer名称，如：orderer0
    string name = 1;
    // grpcs://127.0.0.1:7050
    string url = 2;
    // 这些是由gRPC库定义的标准属性，它们将按原样传递给gRPC客户端构造函数
    GRPCOptions grpcOptions = 6;
    // 节点密钥信息
    Crypto crypto = 5;
}

message OrdererTLSCACerts {
    // 证书位置绝对路径
    string path = 1;
}

// 节点，用于发送各种请求的节点列表，包括背书、查询和事件侦听器注册
message Peer {
    string name = 1;
    // 此URL用于发送背书和查询请求，grpc://peer0.org1.example.com:7051
    string url = 2;
    // eventUrl只在使用eventhub时才需要(默认是交付服务)，grpc://peer0.org1.example.com:7053
    string eventUrl = 3;
    // 这些是由gRPC库定义的标准属性，它们将按原样传递给gRPC客户端构造函数
    GRPCOptions grpcOptions = 4;
    // 节点密钥信息
    Crypto crypto = 5;
    // 可选参数
    //
    // 是否会向该节点发送交易以供其背书，节点必须安装chaincode。应用程序也可以使用这个属性来决定发送chaincode安装请求的节点。
    //
    // 默认值:true
    bool endorsingPeer = 6;
    // 可选参数
    //
    // 这个节点是否可被发送查询建议，节点必须安装chaincode。应用程序也可以使用这个属性来决定发送chaincode安装请求的节点。
    //
    // 默认值:true
    bool chaincodeQuery = 7;
    // 可选参数
    //
    // 这个节点是否可发送不需要链码的查询建议，如queryBlock()、queryTransaction()等。
    //
    // 默认值:true
    bool ledgerQuery = 8;
    // 可选参数
    //
    // 这个节点是否是SDK侦听器注册的目标，所有的对等点都可以产生事件，但应用程序通常只需要连接一个来监听事件。
    //
    // 默认值:true
    bool eventSource = 9;
}

message GRPCOptions {
    // orderer.example.com || peer0.org1.example.com
    string sslTargetNameOverride = 1;
    // keepAliveTime
    //
    // 这些参数应该与服务器上的keepalive策略协调设置，因为不兼容的设置可能导致连接关闭
    //
    // 当“keep-alive-time”的持续时间设置为0或更少时，将禁用keep alive客户端参数
    string keepAliveTime = 2;
    // keepAliveTimeout
    //
    // 这些参数应该与服务器上的keepalive策略协调设置，因为不兼容的设置可能导致连接关闭
    //
    // 当“keep-alive-time”的持续时间设置为0或更少时，将禁用keep alive客户端参数
    string keepAliveTimeout = 3;
    // keepAlivePermit
    //
    // 这些参数应该与服务器上的keepalive策略协调设置，因为不兼容的设置可能导致连接关闭
    //
    // 当“keep-alive-time”的持续时间设置为0或更少时，将禁用keep alive客户端参数
    bool keepAlivePermit = 4;
    bool failFast = 5;
    // 如果地址没有定义协议，则考虑允许不安全;如果为true，则考虑grpc或其他grpc
    bool allowInsecure = 6;
}

// 节点/用户密钥信息
message Crypto {
    // 节点/用户私钥
    bytes key = 1;
    // 节点/用户证书
    bytes cert = 2;
    // 节点/用户tls私钥
    bytes tlsKey = 3;
    // 节点/用户tls证书
    bytes tlsCert = 4;
}

// 组织用户
message User {
    // 用户名，如：Admin/User0
    string name = 1;
    // 是否为管理员用户
    bool isAdmin = 2;
    // 用户密钥信息
    Crypto crypto = 5;
}

message CertificateAuthority {
    // https://ca.org1.example.com:7054
    string url = 1;
    // name of the CA
    string name = 2;
    // ca 指定组织用户名，如：Admin/User0
    string username = 3;
    Registrar registrar = 5;
}

message Registrar {
    string enrollId = 1;
    string enrollSecret = 2;
}