syntax = "proto3";

option java_package = "cn.aberic.fabric-client.grpc.proto.ca";
option java_outer_classname = "CertProto";
option go_package = "grpc/proto/ca";

package ca;

import "grpc/proto/ca/enums.proto";

// 生成根密钥、tls密钥及两者自签名根证书内容请求
message ReqRootCrypto {
    // 组织名称，如org1
    string name = 1;
    // 组织域名，如example.com
    string domain = 2;
    // 生成csr请求证书转译pkix.Name
    Subject subject = 3;
    // ca密钥生成配置结构
    CryptoConfig config = 4;
    // tls ca密钥生成配置结构
    CryptoConfig tlsConfig = 5;
}

// 生成根密钥、tls密钥及两者自签名根证书内容返回结构
message RespRootCrypto {
    // 请求返回结果：success=0；fail=1
    Code code = 1;
    // 当且仅当返回码为1时，此处包含错误信息
    string errMsg = 2;
    bytes priKeyBytes = 4;
    bytes pubKeyBytes = 5;
    bytes certBytes = 6;
    bytes tlsPriKeyBytes = 7;
    bytes tlsPubKeyBytes = 8;
    bytes tlsCertBytes = 9;
}

// 生成密钥对请求
message ReqCrypto {
    // 密钥生成配置结构
    CryptoConfig config = 1;
}

// 生成密钥对返回结构
message RespCrypto {
    // 请求返回结果：success=0；fail=1
    Code code = 1;
    // 当且仅当返回码为1时，此处包含错误信息
    string errMsg = 2;
    bytes priKeyBytes = 4;
    bytes pubKeyBytes = 5;
}

// 生成组织下子节点/用户CA请求证书文件请求
message ReqSignCertificate {
    string orgName = 1;
    string orgDomain = 2;
    string childName = 3;
    bool isUser = 4;
    bytes parentCertBytes = 5;
    bytes parentPriBytes = 6;
    bytes pubBytes = 7;
    Subject subject = 8;
    // 签名算法
    SignAlgorithm signAlgorithm = 9;
}

// 生成组织下子节点/用户CA请求证书文件返回结构
message RespSignCertificate {
    // 请求返回结果：success=0；fail=1
    Code code = 1;
    // 当且仅当返回码为1时，此处包含错误信息
    string errMsg = 2;
    bytes certBytes = 4;
}

// 生成csr请求证书转译pkix.Name
message Subject {
    // 国家代号，如CN
    string country = 4;
    string province = 5;
    string locality = 6;
    string orgUnit = 7;
    string streetAddress = 8;
    string postalCode = 9;
}

// 密钥生成配置结构
message CryptoConfig {
    // 密钥生成类型：ECDSA=0；RSA=1
    CryptoType cryptoType = 1;
    // 密钥长度
    oneof Algorithm {
        // ECDSA密钥长度
        EccAlgorithm eccAlgorithm = 2;
        // RSA密钥长度
        RsaAlgorithm rsaAlgorithm = 3;
    }
    // 签名算法
    SignAlgorithm signAlgorithm = 5;
}